name: dockercompose16927214013844219824
services:
  basket.api:
    build:
      context: C:\Users\91932\source\repos\AutomantonEcom\AutomantonEcom
      dockerfile: Services/Basket/Basket.API/Dockerfile
    depends_on:
      basketdb:
        condition: service_started
        required: true
      basketdistributedcache:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__basketconnectionstring: Server=basketdb;Port=5432;Database=basketDB;User Id=postgress;Password=postgres;Include Error Detail=true
      ConnectionStrings__basketredis: basketdistributedcache:6379
    image: basketapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "6001"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "6061"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\91932\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\91932\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  basketdb:
    container_name: basketdb_container
    environment:
      POSTGRES_DB: basketDB
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgress
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5433"
        protocol: tcp
    restart: always
    shm_size: "134217728"
    volumes:
      - type: volume
        source: postgres_basket
        target: /var/lib/postgresql/data
        volume: {}
  basketdistributedcache:
    container_name: basket_redis_container
    image: redis
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
  catalog.api:
    build:
      context: C:\Users\91932\source\repos\AutomantonEcom\AutomantonEcom
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      catalogdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__catalogconnectionstring: Server=catalogdb;Port=5432;Database=catalogDB;User Id=postgress;Password=postgres;Include Error Detail=true
    image: catalogapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "6000"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "6060"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\91932\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\91932\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  catalogdb:
    container_name: catalogdb_container
    environment:
      POSTGRES_DB: catalogDB
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgress
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    shm_size: "134217728"
    volumes:
      - type: volume
        source: postgres_catalog
        target: /var/lib/postgresql/data
        volume: {}
  discount.grpc.api:
    build:
      context: C:\Users\91932\source\repos\AutomantonEcom\AutomantonEcom
      dockerfile: Services/Discount/Discount.gRPC.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: discountgrpcapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\91932\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\91932\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose16927214013844219824_default
volumes:
  postgres_basket:
    name: dockercompose16927214013844219824_postgres_basket
  postgres_catalog:
    name: dockercompose16927214013844219824_postgres_catalog